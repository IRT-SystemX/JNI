apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aasenv.fullname" . }}
  labels:
    {{- include "aasenv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "aasenv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aasenv.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aasenv.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-db
          image: harbor.irtsysx.fr/docker-proxy-cache/busybox
          imagePullPolicy: IfNotPresent
          env:
            - name: MONGODB_USERNAME
              value: {{ .Values.db.mongodb.username }}
            - name: MONGODB_DB
              value: {{ .Values.db.mongodb.dbname }}
            - name: MONGODB_HOST
              value: {{ .Release.Name }}-mongodb.{{ .Release.Namespace }}.svc.cluster.local
            - name: MONGODB_PORT
              value: {{ .Values.db.mongodb.dbport | quote }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.mongodb.secret.name }}
                  key: {{ .Values.db.mongodb.secret.key }}
          command: ["/bin/sh", "-c"]
          {{- with .Values.initContainer.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          args:
            - |
              until nc -z ${MONGODB_HOST} ${MONGODB_PORT}; do
              echo "Waiting for database to start..."
              sleep 2
              done
            - echo "Database is ready"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          command: {{ . }}
          {{- end }}
          {{- with .Values.args }}
          args: {{ toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: MONGODB_USERNAME
              value: {{ .Values.db.mongodb.username }}
            - name: MONGODB_DB
              value: {{ .Values.db.mongodb.dbname }}
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.db.mongodb.secret.name }}
                  key: {{ .Values.db.mongodb.secret.key }}
          {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.extraEnvFromSecret }}
          envFrom:
          {{- range .Values.extraEnvFromSecret }}
          - secretRef:
              name: {{ . }}
          {{- end }}
          {{- end }}
      {{- with .Values.restartPolicy }}
      restartPolicy: {{ . }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
